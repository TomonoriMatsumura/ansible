- name: 作業用ディレクトリを初期化する
  become: yes
  file:
    path: '{{ work_dir }}'
    state: absent

- name: 作業用ディレクトリを作成する
  become: yes
  file:
    path: '{{ work_dir }}'
    state: directory
    mode: 0755

- name: Jobリストの定義ファイルを取得する
  become: yes
  git:
    repo: '{{ joblist_definition_file_url }}'
    dest: "{{ work_dir }}/joblist"
    version: '{{ joblist_repo_version }}'

- name: Jobリスト定義ファイルをAnsibleコントロールマシーンへ取得する
  fetch:
    src: "{{ work_dir }}/joblist/job-list.yaml"
    dest: /tmp/
    flat: yes

- name: Jobリスト定義ファイルを動的にAnsibleの変数ファイルとして読み込む
  include_vars:
    file: /tmp/job-list.yaml

- name: インストールするJobのリポジトリからJenkinsfileを取得する
  become: yes
  git:
    repo: '{{ item.0.url }}'
    dest: "{{ work_dir }}/{{ item.0.name }}"
    version: '{{ item.0.version }}'
  with_subelements:
    - "{{ jenkins_joblists }}"
    - lists

- name: 登録するJobのリストを作成する
  become: yes
  shell: "find {{ item.1 }} -type f -name Jenkinsfile"
  args:
    chdir: "{{ work_dir }}/{{ item.0.name }}"
  register: JOB_LISTS
  with_subelements:
    - "{{ jenkins_joblists }}"
    - lists

- name: command echo item.0._ansible_parsed >> ansible_parsed.txt
  shell: "echo '{{ item.0._ansible_parsed }} {{ item.1 }} added! ' >> ansible_parsed.txt"
  args:
    chdir: "{{ work_dir }}"
  with_subelements:
    -  "{{ JOB_LISTS.results | default([]) }}"
    - stdout_lines

- name: var_dump JOB_LIST
  debug:
    var: JOB_LISTS

- name: Jobディレクトリを作成する
  become: yes
  file:
    path: "{{ work_dir }}/{{ item.0._ansible_parsed }}/{{ item.1 | regex_replace('Jenkinsfile') }}"
    state: directory
    recurse: yes
  with_subelements:
    -  "{{ JOB_LISTS.results | default([]) }}"
    - stdout_lines

- name: JenkinsへJobを登録する
  become: yes
  copy:
    src: "{{ work_dir }}/{{ item.0._ansible_parsed }}/{{ item.1 }}"
    dest: "{{ jenkins_installed_dir }}/jobs/"
  with_subelements:
    -  "{{ JOB_LISTS.results | default([]) }}"
    - stdout_lines
