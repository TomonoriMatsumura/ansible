- name: バックアップデータ格納ディレクトリを初期化する 
  become: yes
  file:
    path: '{{ backup_data_path }}' 
    state: absent

- name: バックアップデータ格納ディレクトリを作成する
  become: yes
  file:
    path: '{{ backup_data_path }}' 
    state: directory
    mode: 0755

- name: 作業用ディレクトリを初期化する
  become: yes
  file:
    path: '{{ backup_work_dir }}' 
    state: absent 

- name: 作業用ディレクトリを作成する
  become: yes
  file:
    path: '{{ backup_work_dir }}' 
    state: directory
    mode: 0755

- name: PostgreSQLダンプデータを削除する 
  become: yes
  file:
    path: "/tmp/{{ redmine_media_archive_file }}"
    state: absent 

- name: Gitリポジトリをアーカイブする
  become: yes
  shell:
    "tar cfv {{ backup_work_dir }}/{{ git_archive_file}} {{ git_dir }}"
  args:
    chdir: '{{ git_parent_dir }}'
    
- name: メディアファイルをアーカイブする
  become: yes
  shell:
    "tar cfv {{ backup_work_dir }}/{{ redmine_media_archive_file }} files"
  args:
    chdir: '{{ redmine_dir }}'
  

############################################################
# Ansible 2.3でarchiveモジュールが実装されたら以下の処理へ変更する
############################################################
#
#- name: Gitリポジトリをアーカイブする
#  become: yes
#  archive:
#    path: /var/git
#    dest: "{{ backup_data_path }}/git.tar.gz"
#    owner: apache
#    group: apache
#    mode: 0755
#
#- name: Redmineメディアファイルをアーカイブする
#  become: yes
#  archive:
#    path: "{{ redmine_dir}}/files"
#    dest: ""{{ backup_data_path }}/files.tar.gz"
#    owner: apache
#    group: apache
#    mode: 0755

- name: PostgreSQLを再起動する
  become: yes
  service:
    name: postgresql
    state: restarted
    enabled: yes

- name: ユーザー「postgres」を一時的にsudoersに追加する
  become: yes
  environment:
    PATH:
      "/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:{{ ansible_env.PATH }} "
  lineinfile: 
    dest: /etc/sudoers.d/postgres
    owner: root
    group: root
    mode: 0440
    line: "%{{ ansible_user_id}} ALL=(postgres) NOPASSWD: ALL"
    state: present
    create: yes
    validate: "visudo -cf %s"

- name: PostgreSQL / データベース「redmine」をダンプする
  become: yes
  become_user: postgres
  become_method: sudo
  environment:
    PGPASSWORD: '{{ db_password }}'
  shell:
    "pg_dump -h localhost -U {{ db_user }} {{ db_name }} > /tmp/{{ pg_dump_data_file }}"

- name: Gitアーカイブスを公開ディレクトリへ移動する
  become: yes
  copy:
    src:
      "{{ backup_work_dir }}/{{ git_archive_file }}"
    dest:
      "{{ backup_data_path }}/{{ git_archive_file }}"
    owner: apache
    group: apache
    mode: 0755
    remote_src: True

- name: メディアファイルアーカイブスを公開ディレクトリへ移動する
  become: yes
  copy:
    src:
      "{{ backup_work_dir }}/{{ redmine_media_archive_file }}"
    dest:
      "{{ backup_data_path }}/{{ redmine_media_archive_file }}"
    owner: apache
    group: apache
    mode: 0755
    remote_src: True

- name: PostgreSQLダンプファイルを公開ディレクトリへ移動する
  become: yes
  copy:
    src:
      "/tmp/{{ pg_dump_data_file }}"
    dest:
      "{{ backup_data_path }}/{{ pg_dump_data_file }}"
    owner: apache
    group: apache
    mode: 0755
    remote_src: True

- name: postgresをsudoersから削除する
  become: yes
  file:  
    path: /etc/sudoers.d/postgres
    state: absent

- name: 作業用ディレクトリを初期化する
  become: yes
  file:
    path: '{{ backup_work_dir }}' 
    state: absent 

- name: PostgreSQLダンプデータを削除する 
  become: yes
  file:
    path: "/tmp/{{ pg_dump_data_file }}"
    state: absent 
