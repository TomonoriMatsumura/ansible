- name: 各サーバのPlaybookトリーガースクリプトを配置するディレクトリを作成する
  file:
    path: '{{ ansible_user_dir }}/ansible/bin/{{ item.key }}'
    state: directory
  with_dict: "{{ ipv4 }}"

- name: 「jenkins_install」をbinディレクトリに配置する
  template:
    src: jenkins_install
    dest: '{{ ansible_user_dir }}/ansible/bin/{{ item.key }}/'
    mode: 0755
    force: yes
  with_dict: "{{ ipv4 }}"

- name: 「owncloud_install」をbinディレクトリに配置する
  template:
    src: owncloud_install
    dest: '{{ ansible_user_dir }}/ansible/bin/{{ item.key }}/'
    force: yes
  with_dict: "{{ ipv4 }}"

- name: 「redmine_create_backup」をbinディレクトリに配置する
  template:
    src: redmine_create_backup
    dest: '{{ ansible_user_dir }}/ansible/bin/{{ item.key }}/'
    force: yes
  with_dict: "{{ ipv4 }}"

- name: 「redmine_install」をbinディレクトリに配置する
  template:
    src: redmine_install
    dest: '{{ ansible_user_dir }}/ansible/bin/{{ item.key }}/'
    force: yes
  with_dict: "{{ ipv4 }}"

- name: 「redmine_restore」をbinディレクトリに配置する
  template:
    src: redmine_restore
    dest: '{{ ansible_user_dir }}/ansible/bin/{{ item.key }}/'
    force: yes
  with_dict: "{{ ipv4 }}"

- name: 「selenium_python_install」をbinディレクトリに配置する 
  template:
    src: selenium_python_install
    dest: '{{ ansible_user_dir }}/ansible/bin/{{ item.key }}/'
    force: yes
  with_dict: "{{ ipv4 }}"

- name: 「language_ruby_install_rbenv_2.3.3」をbinディレクトリに配置する
  template:
    src: language_ruby_install_rbenv_2.3.3 
    dest: '{{ ansible_user_dir }}/ansible/bin/{{ item.key }}/'
    force: yes
  with_dict: "{{ ipv4 }}"

- name: 「system_ssh_add-users-and-change-sshd-config-and-firewall」をbinディレクトリに配置する 
  template:
    src: system_ssh_add-users-and-change-sshd-config-and-firewall 
    dest: '{{ ansible_user_dir }}/ansible/bin/{{ item.key }}/'
    force: yes
  with_dict: "{{ ipv4 }}"


- name: 「system_ssh_reset-sshd-config-and-firewall_and_remove-users」をbinディレクトリに配置する 
  template:
    src: system_ssh_reset-sshd-config-and-firewall_and_remove-users
    dest: '{{ ansible_user_dir }}/ansible/bin/{{ item.key }}/'
    force: yes
  with_dict: "{{ ipv4 }}"

- name: 「system_update_and_set-selinux-disabled」をbinディレクトリに配置する 
  template:
    src: system_update_and_set-selinux-disabled 
    dest: '{{ ansible_user_dir }}/ansible/bin/{{ item.key }}/'
    force: yes
  with_dict: "{{ ipv4 }}"

- name: 「vim_install」をbinディレクトリに配置する 
  template:
    src: vim_install
    dest: '{{ ansible_user_dir }}/ansible/bin/{{ item.key }}/'
    force: yes
  with_dict: "{{ ipv4 }}"

- name: 「vnc_server_install」をbinディレクトリに配置する
  template:
    src: vnc_server_install
    dest: '{{ ansible_user_dir }}/ansible/bin/{{ item.key }}/'
    force: yes
  with_dict: "{{ ipv4 }}"

- name: 「wordpress_create_backup」をbinディレクトリに配置する
  template:
    src: wordpress_create_backup
    dest: '{{ ansible_user_dir }}/ansible/bin/{{ item.key }}/'
    force: yes
  with_dict: "{{ ipv4 }}"

- name: 「wordpress_install」をbinディレクトリに配置する
  template:
    src: wordpress_install
    dest: '{{ ansible_user_dir }}/ansible/bin/{{ item.key }}/'
    mode: 0755
    force: yes
  with_dict: "{{ ipv4 }}"

- name: テストスクリプトを配置するディレクトリを作成する
  file:
    path: '{{ ansible_user_dir }}/ansible/bin/{{ item.key }}/tests'
    state: directory
  with_dict: "{{ ipv4 }}"

- name: shunit2をGitリポジトリから取得する
  git:
    repo: https://github.com/kward/shunit2.git
    dest: '{{ ansible_user_dir }}/ansible/bin/shunit2'

- name: 「wordpress_install」のテストスクリプトを配置するディレクトリを作成する
  file:
    path: '{{ ansible_user_dir }}/ansible/bin/{{ item.key }}/tests/wordpress_install'
    state: directory
  with_dict: "{{ ipv4 }}"

- name: 「invalid-extra-vars-name-should-cause-stderr-and-return-false.sh」を配置する
  template:
    src: tests/wordpress_install/invalid-extra-vars-name-should-cause-stderr-and-return-false.sh 
    dest: '{{ ansible_user_dir }}/ansible/bin/{{ item.key }}/tests/wordpress_install'
    force: yes
  with_dict: "{{ ipv4 }}"

- name: 「no-extra-vars-argument-should-cause-stderr-and-return-false.sh 」を配置する
  template:
    src: tests/wordpress_install/no-extra-vars-argument-should-cause-stderr-and-return-false.sh 
    dest: '{{ ansible_user_dir }}/ansible/bin/{{ item.key }}/tests/wordpress_install'
    force: yes
  with_dict: "{{ ipv4 }}"
