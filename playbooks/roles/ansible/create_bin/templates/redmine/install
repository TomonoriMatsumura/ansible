PROGNAME=$(basename $0)
VERSION="0.1"

usage() {
    echo "Usage: $PROGRAM [OPTIONS] FILE"
    echo "  This script is ~."
    echo
    echo "Options:"
    echo "  -h, --help"
    echo
    echo "  --version"
    echo
    echo "  --db_host ARGUMENT"
    echo "          redmine_installが利用するRDBSMのデータベースホスト"
    echo "          初期値は「localhost」"
    echo
    echo "  --db_name ARGUMENT"
    echo "          redmine_installが利用するRDBSMのデータベース名"
    echo "          初期値は「redmine」"
    echo
    echo "  --db_password ARGUMENT"
    echo "          redmine_installが利用するRDBSMのデータベースパスワード"
    echo "          初期値は「password」"
    echo
    echo "  --db_port ARGUMENT"
    echo "          redmine_installが利用するRDBSMのデータベースポート番号"
    echo "          初期値は「5432」"
    echo
    echo "  --db_user ARGUMENT"
    echo "          redmine_installが利用するRDBSMのデータベースユーザー名"
    echo "          初期値は「redmine」"
    echo 
    echo "  --redmine_dir ARGUMENT"
    echo "          Redmineのデプロイ先ディレクトリ"
    echo "          初期値は「/var/lib/redmine」"
    echo
    echo "  --skip-tags ARGUMENT"
    echo "          指定したタグのついたロールをスキップして実行する。タグの指定はコンマで区切る。"
    echo "              例）bash someplaybook-bash --skip-tags "httpd_install,redmine_install" "
    echo 
    echo "                  指定可能なタグ"
    echo "                      -httpd_install"
    echo "                      -language_ruby_install_source"
    echo "                      -rdb_pg_install"
    echo "                      -redmine_create-pg-accound-and-database"
    echo "                      -redmine_install"
    echo "                      -httpd_passenger_install"
    echo
    echo "  --tags ARGUMENT"
    echo "          指定したタグのついたロールのみ実行する。タグの指定はコンマで区切る。"
    echo "              例）bash someplaybook-bash --tags "httpd_install,redmine_install" "
    echo 
    echo "                  指定可能なタグ"
    echo "                      -httpd_install"
    echo "                      -language_ruby_install_source"
    echo "                      -rdb_pg_install"
    echo "                      -redmine_create-pg-accound-and-database"
    echo "                      -redmine_install"
    echo "                      -httpd_passenger_install"
    echo
    echo "  --work_dir ARGUMENT"
    echo "          redmine_installの作業用ディレクトリ"
    echo "          初期値は「/tmp/redmine-install-dir」"
    echo
    exit 1
}

EXTRA_VARS=""
TAGS=

for OPT in "$@"
do
    case "$OPT" in
        '-h'|'--help' )
            usage
            exit 1
            ;;

        '--version' )
            echo $VERSION
            exit 1
            ;;

        '--db_host' )
            if [[ -z "$2" ]] || [[ "$2" =~ ^-+ ]]; then
                echo "RPROGRAM: option requires an argument -- $1"
                exit 1
            fi
            EXTRA_VARS="${EXTRA_VARS} db_host=$2"
            shift 1 
            ;;

        '--db_name' )
            if [[ -z "$2" ]] || [[ "$2" =~ ^-+ ]]; then
                echo "RPROGRAM: option requires an argument -- $1"
                exit 1
            fi
            EXTRA_VARS="${EXTRA_VARS} db_name=$2"
            shift 1
            ;;

        '--db_password' )
            if [[ -z "$2" ]] || [[ "$2" =~ ^-+ ]]; then
                echo "RPROGRAM: option requires an argument -- $1"
                exit 1
            fi
            EXTRA_VARS="${EXTRA_VARS} db_password=$2"
            shift 1
            ;;

        '--db_port' )
            if [[ -z "$2" ]] || [[ "$2" =~ ^-+ ]]; then
                echo "RPROGRAM: option requires an argument -- $1"
                exit 1
            fi
            EXTRA_VARS="${EXTRA_VARS} db_port=$2"
            shift 1
            ;;

        '--db_user' )
            if [[ -z "$2" ]] || [[ "$2" =~ ^-+ ]]; then
                echo "RPROGRAM: option requires an argument -- $1"
                exit 1
            fi
            EXTRA_VARS="${EXTRA_VARS} db_user=$2"
            shift 1
            ;;

        '--redmine_dir' )
            if [[ -z "$2" ]] || [[ "$2" =~ ^-+ ]]; then
                echo "RPROGRAM: option requires an argument -- $1"
                exit 1
            fi
            EXTRA_VARS="${EXTRA_VARS} redmine_dir=$2"
            shift 1
            ;;

        '--skip-tags' )
            if [[ -z "$2" ]] || [[ "$2" =~ ^-+ ]]; then
                echo "RPROGRAM: option requires an argument -- $1"
                exit 1
            fi

            if [[ ! -z ${TAGS} ]]; then
                echo "PROGRAM: Only one of [--tags] and [--skip-tags] options should be used."
                exit 1
            fi

            TAGS="--skip-tags \"$2\""
            shift 1
            ;;

        '--tags' )
            if [[ -z "$2" ]] || [[ "$2" =~ ^-+ ]]; then
                echo "RPROGRAM: option requires an argument -- $1"
                exit 1
            fi

            if [[ ! -z ${TAGS} ]]; then
                echo "PROGRAM: Only one of [--tags] and [--skip-tags] options should be used."
                exit 1
            fi

            TAGS="--tags \"$2\""
            shift 1
            ;;

        '--work_dir' )
            if [[ -z "$2" ]] || [[ "$2" =~ ^-+ ]]; then
                echo "RPROGRAM: option requires an argument -- $1"
                exit 1
            fi
            EXTRA_VARS="${EXTRA_VARS} work_dir=$2"
            shift 1
            ;;
        
        '--'|'-' )
            shift 1
            param+=( "$@" )
            break
            ;;

        -*)
            echo "$PROGNAME: illegal option -- '$(echo $1 | sed 's/^-*//')'" 1>&2
            exit 1
            ;;

        *)
            if [[ ! -z "$1" ]] && [[ ! "$1" =~ ^-x ]]; then
                param+=( "$1" )
                shift 1
            fi
            ;;
    esac
done


export ANSIBLE_HOST_KEY_CHECKING=False

# ログファイルのパスを設定する
LOG_PATH="{{ ansible_user_dir }}/ansible/bin/redmine_install-{{ item.key }}.log"
rm -rf ${LOG_PATH}
export ANSIBLE_LOG_PATH=${LOG_PATH}

EXTRA_VARS_AND_TAGS=""

if [[ ! -z "${EXTRA_VARS}" ]]; then
    EXTRA_VARS_ARGS=`echo ${EXTRA_VARS} | sed -e 's/^<space>//'`
    EXTRA_VARS_AND_TAGS="--extra-vars \"${EXTRA_VARS_ARGS}\""
fi

if [[ ! -z "${TAGS}" ]]; then
    extra_vars_and_tags="${EXTRA_VARS_AND_TAGS} ${TAGS}"
fi

expect -c "

    set timeout -1

    spawn ansible-playbook {{ ansible_user_dir }}/ansible/playbooks/redmine_install.yml -S --ask-su-pass -i "{{ item.key }}:{{ ssh_port }}," -u ansible --ask-vault-pass `echo ${extra_vars_and_tags}`

    expect "SU*"

    send -- \"{{ item.value.password }}\n\"

    expect "Vault*password"

    send \"{{ vault_password }}\n\"

    expect "Enter*passphrase"

    send \"{{ vault_password }}\n\"

    expect eof
    exit
    "    

# SSH接続が失敗している場合はステータス「1」を返して終了する
if tail -n 1 ${LOG_PATH} | grep unreachable=1 ; then
    exit 1
fi

# 処理が失敗している場合はステータス「1」を返して終了する
if ! tail -n 1 ${LOG_PATH} | grep failed=0 ; then
    exit 1
fi
